# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: VisionVogue .NET
on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - '*'
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch to build'
        required: true
jobs:
  BuildAndTest:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - uses: browser-actions/setup-chrome@v1
        with:
          chrome-version: 114
          
      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 8.0.x

      - name: Install Nikto
        shell: bash
        run: sudo apt install nikto

      - name: Install Nmap
        shell: bash
        run: sudo apt install nmap

      - name: Create Bridge
        shell: bash
        run: docker network create visionvogue-net
          
      - name: Setup DB
        shell: bash
        run: docker run -e "ACCEPT_EULA=Y" -e "MSSQL_SA_PASSWORD=${{ secrets.MSSQL_SA_SECRET }}" --network visionvogue-net --name sqlpreview --hostname localhost -p 1433:1433/tcp -d mcr.microsoft.com/mssql/server:2022-preview-ubuntu-22.04
        
      - name: Restore dependencies
        shell: bash
        run: dotnet restore
      
      - name: Download .NET tool
        shell: bash
        run: dotnet tool install --global dotnet-ef
        
      - name: Add Migrations
        shell: bash
        run: dotnet ef migrations add Initial -c GlassesStoreDbContext --project VirtualGlassesProvider/VirtualGlassesProvider.csproj
      
      - name: Update Database
        shell: bash
        run: dotnet ef database update Initial --project VirtualGlassesProvider/VirtualGlassesProvider.csproj --connection "Server=localhost,1433;Database=VisionVogue;User Id=sa;Password=${{secrets.MSSQL_SA_SECRET }};TrustServerCertificate=true;"

      - name: Build App Container
        shell: bash
        run: docker build --rm -t cherrytreegee811/vision-vogue:latest .

      - name: Run App Container
        shell: bash
        run: docker run --rm -dit --name visionvogue-app --hostname localhost --network visionvogue-net -p 5000:5000/tcp -p 5001:5001/tcp -e ASPNETCORE_HTTP_PORT=https://+5001 -e ASPNETCORE_URLS=http://+:5000 cherrytreegee811/vision-vogue
        
      - name: Automated Tests
        shell: bash
        run: dotnet test VirtualGlassesProvider.Tests/VirtualGlassesProvider.Tests.csproj --os linux --verbosity normal

      - name: Delete Test Data
        shell: bash
        run: docker exec -i sqlpreview /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P ${{ secrets.MSSQL_SA_SECRET }} -q "DELETE FROM VisionVogue.dbo.ASPNetUsers WHERE NormalizedUserName <> 'ADMIN';"

      - name: Nikto Scan
        shell: bash
        run: |
          nikto -h http://localhost:5000 -C all
          nikto -h http://localhost:5000/home -C all

      - name: Nmap Scan
        shell: bash
        run: sudo nmap -sT -p 1433,5000,5001 --script vuln 127.0.0.1

      - name: Stop Containers
        shell: bash
        run: |
          docker stop visionvogue-app
          docker stop sqlpreview
        
      - name: Push to Docker
        if: ${{ github.ref == 'refs/heads/main' }}
        shell: bash
        run: |
          docker login -u cherrytreegee811 -p ${{ secrets.DOCKER_CRED }}
          docker commit sqlpreview cherrytreegee811/vision-vogue-database
          docker push cherrytreegee811/vision-vogue-database:latest
          docker push cherrytreegee811/vision-vogue:latest
